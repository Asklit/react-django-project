{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\projects\\\\JSX\\\\reactProject\\\\frontend\\\\src\\\\Components\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/AdminPanel.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  const [words, setWords] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: ''\n  });\n  const [newAdmin, setNewAdmin] = useState({\n    username: ''\n  });\n  const [newWord, setNewWord] = useState({\n    word: ''\n  });\n  const [activeTab, setActiveTab] = useState('users');\n  useEffect(() => {\n    // Загрузка пользователей\n    fetch('/users/').then(response => response.json()).then(data => setUsers(data));\n\n    // Загрузка админов\n    fetch('/admins/').then(response => response.json()).then(data => setAdmins(data));\n\n    // Загрузка слов\n    fetch('/words/').then(response => response.json()).then(data => setWords(data));\n  }, []);\n  const handleSubmit = async (event, type) => {\n    event.preventDefault();\n    let newData;\n    if (type === 'user') {\n      try {\n        const response = await fetch('/users/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const user = await response.json();\n        setUsers([...users, user]);\n        setNewUser({\n          username: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'admin') {\n      try {\n        const response = await fetch('/admins/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newAdmin)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const admin = await response.json();\n        setAdmins([...admins, admin]);\n        setNewAdmin({\n          username: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'word') {\n      try {\n        const response = await fetch('/words/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newWord)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const word = await response.json();\n        setWords([...words, word]);\n        setNewWord({\n          word: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    }\n  };\n  const handleEdit = async (type, id, updatedData) => {\n    if (type === 'user') {\n      try {\n        const response = await fetch(`/users/${id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedData)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const user = await response.json();\n        setUsers(users.map(user => user.id === id ? updatedData : user));\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'admin') {\n      try {\n        const response = await fetch(`/admins/${id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedData)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const admin = await response.json();\n        setAdmins(admins.map(admin => admin.id === id ? updatedData : admin));\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'word') {\n      try {\n        const response = await fetch(`/words/${id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedData)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const word = await response.json();\n        setWords(words.map(word => word.id === id ? updatedData : word));\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    }\n  };\n  const handleDelete = async (type, id) => {\n    if (type === 'user') {\n      try {\n        const response = await fetch(`/users/${id}/`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        setUsers(users.filter(user => user.id !== id));\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'admin') {\n      try {\n        const response = await fetch(`/admins/${id}/`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        setAdmins(admins.filter(admin => admin.id !== id));\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'word') {\n      try {\n        const response = await fetch(`/words/${id}/`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        setWords(words.filter(word => word.id !== id));\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.adminPanel,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActiveTab('users'),\n      children: \"Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActiveTab('admins'),\n      children: \"Admins\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActiveTab('words'),\n      children: \"Words\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), activeTab === 'users' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'user'),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newUser.username,\n          onChange: e => setNewUser({\n            ...newUser,\n            username: e.target.value\n          }),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit('user', user.id, {\n                  username: prompt('New Username:', user.username)\n                }),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete('user', user.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), activeTab === 'admins' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'admin'),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newAdmin.username,\n          onChange: e => setNewAdmin({\n            ...newAdmin,\n            username: e.target.value\n          }),\n          placeholder: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit('admin', admin.id, {\n                  username: prompt('New Username:', admin.username)\n                }),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete('admin', admin.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)]\n          }, admin.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), activeTab === 'words' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabContent,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'word'),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newWord.word,\n          onChange: e => setNewWord({\n            ...newWord,\n            word: e.target.value\n          }),\n          placeholder: \"Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: words.map(word => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: word.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: word.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit('word', word.id, {\n                  word: prompt('New Word:', word.word)\n                }),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete('word', word.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"YuM36vnQDHRuh2i+mkGbe4qU69s=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","AdminPanel","_s","users","setUsers","admins","setAdmins","words","setWords","newUser","setNewUser","username","newAdmin","setNewAdmin","newWord","setNewWord","word","activeTab","setActiveTab","fetch","then","response","json","data","handleSubmit","event","type","preventDefault","newData","method","headers","body","JSON","stringify","ok","Error","user","error","console","admin","handleEdit","id","updatedData","map","handleDelete","filter","className","adminPanel","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","tabContent","onSubmit","e","value","onChange","target","placeholder","email","prompt","_c","$RefreshReg$"],"sources":["C:/data/projects/JSX/reactProject/frontend/src/Components/AdminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from '../styles/AdminPanel.module.css';\r\n\r\nfunction AdminPanel() {\r\n  const [users, setUsers] = useState([]);\r\n  const [admins, setAdmins] = useState([]);\r\n  const [words, setWords] = useState([]);\r\n\r\n  const [newUser, setNewUser] = useState({ username: '' });\r\n  const [newAdmin, setNewAdmin] = useState({ username: '' });\r\n  const [newWord, setNewWord] = useState({ word: '' });\r\n\r\n  const [activeTab, setActiveTab] = useState('users');\r\n\r\n  useEffect(() => {\r\n    // Загрузка пользователей\r\n    fetch('/users/')\r\n      .then(response => response.json())\r\n      .then(data => setUsers(data));\r\n\r\n    // Загрузка админов\r\n    fetch('/admins/')\r\n      .then(response => response.json())\r\n      .then(data => setAdmins(data));\r\n\r\n    // Загрузка слов\r\n    fetch('/words/')\r\n      .then(response => response.json())\r\n      .then(data => setWords(data));\r\n  }, []);\r\n\r\n  const handleSubmit = async (event, type) => {\r\n    event.preventDefault();\r\n    let newData;\r\n    if (type === 'user') {\r\n      try {\r\n        const response = await fetch('/users/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newUser)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const user = await response.json();\r\n        setUsers([...users, user]);\r\n        setNewUser({ username: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'admin') {\r\n      try {\r\n        const response = await fetch('/admins/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newAdmin)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const admin = await response.json();\r\n        setAdmins([...admins, admin]);\r\n        setNewAdmin({ username: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'word') {\r\n      try {\r\n        const response = await fetch('/words/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newWord)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const word = await response.json();\r\n        setWords([...words, word]);\r\n        setNewWord({ word: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEdit = async (type, id, updatedData) => {\r\n    if (type === 'user') {\r\n      try {\r\n        const response = await fetch(`/users/${id}/`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(updatedData)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const user = await response.json();\r\n        setUsers(users.map(user => (user.id === id ? updatedData : user)));\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'admin') {\r\n      try {\r\n        const response = await fetch(`/admins/${id}/`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(updatedData)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const admin = await response.json();\r\n        setAdmins(admins.map(admin => (admin.id === id ? updatedData : admin)));\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'word') {\r\n      try {\r\n        const response = await fetch(`/words/${id}/`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(updatedData)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const word = await response.json();\r\n        setWords(words.map(word => (word.id === id ? updatedData : word)));\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (type, id) => {\r\n    if (type === 'user') {\r\n      try {\r\n        const response = await fetch(`/users/${id}/`, {\r\n          method: 'DELETE'\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        setUsers(users.filter(user => user.id !== id));\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'admin') {\r\n      try {\r\n        const response = await fetch(`/admins/${id}/`, {\r\n          method: 'DELETE'\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        setAdmins(admins.filter(admin => admin.id !== id));\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'word') {\r\n      try {\r\n        const response = await fetch(`/words/${id}/`, {\r\n          method: 'DELETE'\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        setWords(words.filter(word => word.id !== id));\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.adminPanel}>\r\n      <button onClick={() => setActiveTab('users')}>Users</button>\r\n      <button onClick={() => setActiveTab('admins')}>Admins</button>\r\n      <button onClick={() => setActiveTab('words')}>Words</button>\r\n\r\n      {activeTab === 'users' && (\r\n        <div className={styles.tabContent}>\r\n          <form onSubmit={(e) => handleSubmit(e, 'user')}>\r\n            <input\r\n              type=\"text\"\r\n              value={newUser.username}\r\n              onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\r\n              placeholder=\"Username\"\r\n            />\r\n            <button type=\"submit\">Add User</button>\r\n          </form>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Username</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>{user.email}</td>\r\n                  <td>\r\n                    <button onClick={() => handleEdit('user', user.id, { username: prompt('New Username:', user.username) })}>Edit</button>\r\n                    <button onClick={() => handleDelete('user', user.id)}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'admins' && (\r\n        <div className={styles.tabContent}>\r\n          <form onSubmit={(e) => handleSubmit(e, 'admin')}>\r\n            <input\r\n              type=\"text\"\r\n              value={newAdmin.username}\r\n              onChange={(e) => setNewAdmin({ ...newAdmin, username: e.target.value })}\r\n              placeholder=\"Username\"\r\n            />\r\n            <button type=\"submit\">Add Admin</button>\r\n          </form>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Username</th>\r\n                <th>Email</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admins.map(admin => (\r\n                <tr key={admin.id}>\r\n                  <td>{admin.id}</td>\r\n                  <td>{admin.username}</td>\r\n                  <td>{admin.email}</td>\r\n                  <td>\r\n                    <button onClick={() => handleEdit('admin', admin.id, { username: prompt('New Username:', admin.username) })}>Edit</button>\r\n                    <button onClick={() => handleDelete('admin', admin.id)}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'words' && (\r\n        <div className={styles.tabContent}>\r\n          <form onSubmit={(e) => handleSubmit(e, 'word')}>\r\n            <input\r\n              type=\"text\"\r\n              value={newWord.word}\r\n              onChange={(e) => setNewWord({ ...newWord, word: e.target.value })}\r\n              placeholder=\"Word\"\r\n            />\r\n            <button type=\"submit\">Add Word</button>\r\n          </form>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Word</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {words.map(word => (\r\n                <tr key={word.id}>\r\n                  <td>{word.id}</td>\r\n                  <td>{word.word}</td>\r\n                  <td>\r\n                    <button onClick={() => handleEdit('word', word.id, { word: prompt('New Word:', word.word) })}>Edit</button>\r\n                    <button onClick={() => handleDelete('word', word.id)}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}