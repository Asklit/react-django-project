{"ast":null,"code":"var _jsxFileName = \"/Users/asklit/Documents/frontend/reactProject/frontend/src/Components/Words.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport styles from \"../styles/words.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Words = ({\n  word,\n  translate\n}) => {\n  _s();\n  const [inputWord, setInputWord] = useState(\"\");\n  const [inputTranslate, setInputTranslate] = useState(\"\");\n  co;\n  const handleChangeWord = e => {\n    if (e.target.value[inputWord.length] === \" \") {\n      console.log(1);\n    } else {\n      if (e.target.value.length === 0) {\n        setInputWord(\"\");\n      } else if (e.target.value.length == 15) {\n        e.target.value = e.target.value.slice(0, e.target.value.length - 1);\n      } else if (inputWord.length < e.target.value.length) {\n        setInputWord(inputWord + e.target.value[inputWord.length]);\n        if (inputWord.length < word.length) {\n          e.target.value = word.slice(0, inputWord.length + 1);\n        }\n      } else if (inputWord.length > e.target.value.length) {\n        setInputWord(inputWord.slice(0, inputWord.length - 1));\n        if (inputWord.length > word.length) {\n          e.target.value = word.slice(0, inputWord.length) + inputWord.slice(word.length, inputWord.length - 1);\n        } else {\n          e.target.value = word.slice(0, inputWord.length - 1);\n        }\n      }\n    }\n  };\n  const handleChangeTranslate = e => {\n    setInputTranslate(e.target.value);\n  };\n  const renderWord = ({\n    string,\n    value\n  }) => {\n    const renderedChars = [...string].map((char, index) => {\n      const isMatched = value[index] === char;\n      const color = isMatched ? \"#dcdee3\" : value[index] ? \"#df4f4b\" : \"#54555e\";\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color\n        },\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this);\n    });\n    if (value.length > string.length) {\n      const extraChars = [...value].slice(string.length).map((char, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#df4f4b\"\n        },\n        children: char\n      }, string.length + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderedChars, extraChars]\n      }, void 0, true);\n    }\n    return renderedChars;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${styles.inputWord} ${styles.firstInputLength}`,\n        id: \"word\",\n        onChange: handleChangeWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.word}`,\n        children: renderWord({\n          string: word,\n          value: inputWord\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${styles.inputWord} ${styles.secondInputLength}`,\n        onChange: handleChangeTranslate,\n        id: \"translate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.word}`,\n        children: renderWord({\n          string: translate,\n          value: inputTranslate\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Words, \"LCoycoxhww4+cM7X451bKOSOLmg=\");\n_c = Words;\nexport default Words;\nvar _c;\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"names":["React","useRef","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Words","word","translate","_s","inputWord","setInputWord","inputTranslate","setInputTranslate","co","handleChangeWord","e","target","value","length","console","log","slice","handleChangeTranslate","renderWord","string","renderedChars","map","char","index","isMatched","color","style","children","fileName","_jsxFileName","lineNumber","columnNumber","extraChars","className","container","wrapper","firstInputLength","id","onChange","secondInputLength","_c","$RefreshReg$"],"sources":["/Users/asklit/Documents/frontend/reactProject/frontend/src/Components/Words.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styles from \"../styles/words.module.css\";\n\nconst Words = ({ word, translate }) => {\n  const [inputWord, setInputWord] = useState(\"\");\n  const [inputTranslate, setInputTranslate] = useState(\"\");\n\n  co\n\n  const handleChangeWord = (e) => {\n    if (e.target.value[inputWord.length] === \" \"){\n      console.log(1)\n    } else {\n    if (e.target.value.length === 0) {\n      setInputWord(\"\");\n    } else if (e.target.value.length == 15) {\n      e.target.value = e.target.value.slice(0, e.target.value.length-1)\n    } else if (inputWord.length < e.target.value.length) {\n      setInputWord(inputWord + e.target.value[inputWord.length]);\n      if (inputWord.length < word.length) {\n        e.target.value = word.slice(0, inputWord.length + 1);\n      }\n    } else if (inputWord.length > e.target.value.length) {\n      setInputWord(inputWord.slice(0, inputWord.length - 1));\n      if (inputWord.length > word.length) {\n        e.target.value = word.slice(0, inputWord.length) + inputWord.slice(word.length, inputWord.length - 1);\n      } else {\n        e.target.value = word.slice(0, inputWord.length - 1);\n      }\n    }}\n  };\n\n  const handleChangeTranslate = (e) => {\n    setInputTranslate(e.target.value);\n  };\n\n  const renderWord = ({ string, value }) => {\n    const renderedChars = [...string].map((char, index) => {\n      const isMatched = value[index] === char;\n      const color = isMatched\n        ? \"#dcdee3\"\n        : value[index]\n        ? \"#df4f4b\"\n        : \"#54555e\";\n      return (\n        <span key={index} style={{ color }}>\n          {char}\n        </span>\n      );\n    });\n  \n    if (value.length > string.length) {\n      const extraChars = [...value].slice(string.length).map((char, index) => (\n        <span key={string.length + index} style={{ color: \"#df4f4b\" }}>\n          {char}\n        </span>\n      ));\n      return (\n        <>\n          {renderedChars}\n          {extraChars}\n        </>\n      );\n    }\n  \n    return renderedChars;\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <input\n          className={`${styles.inputWord} ${styles.firstInputLength}`}\n          id=\"word\"\n          onChange={handleChangeWord}\n        />\n        <div className={`${styles.word}`}>\n          {renderWord({ string: word, value: inputWord })}\n        </div>\n      </div>\n      <div className={styles.wrapper}>\n        <input\n          className={`${styles.inputWord} ${styles.secondInputLength}`}\n          onChange={handleChangeTranslate}\n          id=\"translate\"\n        />\n        <div className={`${styles.word}`}>\n          {renderWord({ string: translate, value: inputTranslate })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Words;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}