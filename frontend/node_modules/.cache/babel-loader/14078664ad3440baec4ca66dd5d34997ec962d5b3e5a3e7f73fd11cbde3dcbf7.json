{"ast":null,"code":"var _jsxFileName = \"/Users/asklit/Documents/frontend/reactProject/frontend/src/Components/Words.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport styles from \"../styles/words.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Words = ({\n  word,\n  translate\n}) => {\n  _s();\n  const [inputWord, setInputWord] = useState('');\n  const [inputTranslate, setInputTranslate] = useState('');\n  const overflowInputWord = \"\";\n  const handleChangeWord = e => {\n    if (inputWord.length < e.target.value.length) setInputWord(inputWord + e.target.value[inputWord.length]);else setInputWord(inputWord.slice());\n    e.target.value = word.slice(0, inputWord.length + 1);\n    console.log(e.target.value);\n  };\n  const handleChangeTranslate = e => {\n    setInputTranslate(e.target.value);\n  };\n  const renderWord = ({\n    string,\n    value\n  }) => {\n    return [...string].map((char, index) => {\n      const isMatched = value[index] === char;\n      const color = isMatched ? '#dcdee3' : value[index] ? '#df4f4b' : '#54555e';\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color\n        },\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${styles.inputWord} ${styles.firstInputLength}`,\n        onChange: handleChangeWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.word}`,\n        children: renderWord({\n          string: word,\n          value: inputWord\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${styles.inputWord} ${styles.secondInputLength}`,\n        onChange: handleChangeTranslate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.word}`,\n        children: renderWord({\n          string: translate,\n          value: inputTranslate\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Words, \"OtsWAbZ99smIc/W+a0E8u6hhDQU=\");\n_c = Words;\nexport default Words;\nvar _c;\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"names":["React","useRef","useState","styles","jsxDEV","_jsxDEV","Words","word","translate","_s","inputWord","setInputWord","inputTranslate","setInputTranslate","overflowInputWord","handleChangeWord","e","length","target","value","slice","console","log","handleChangeTranslate","renderWord","string","map","char","index","isMatched","color","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","wrapper","firstInputLength","onChange","secondInputLength","_c","$RefreshReg$"],"sources":["/Users/asklit/Documents/frontend/reactProject/frontend/src/Components/Words.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styles from \"../styles/words.module.css\";\n\nconst Words = ({ word, translate }) => {\n  const [inputWord, setInputWord] = useState('');\n  const [inputTranslate, setInputTranslate] = useState('');\n  const overflowInputWord = \"\"\n\n  const handleChangeWord = (e) => {\n    if (inputWord.length < e.target.value.length)\n      setInputWord(inputWord + e.target.value[inputWord.length]);\n    else\n    setInputWord(inputWord.slice());\n    e.target.value = word.slice(0, inputWord.length + 1)\n    console.log(e.target.value)\n  };\n\n  const handleChangeTranslate = (e) => {\n    setInputTranslate(e.target.value);\n  };\n\n  const renderWord = ({ string, value }) => {\n    return [...string].map((char, index) => {\n      const isMatched = value[index] === char;\n      const color = isMatched ? '#dcdee3' : value[index] ? '#df4f4b' : '#54555e';\n      return (\n        <span key={index} style={{ color }}>\n          {char}\n        </span>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <input\n          className={`${styles.inputWord} ${styles.firstInputLength}`}\n          onChange={handleChangeWord}\n        />\n        <div className={`${styles.word}`}>{ renderWord({string: word, value: inputWord }) }</div>\n      </div>\n      <div className={styles.wrapper}>\n        <input\n          className={`${styles.inputWord} ${styles.secondInputLength}`}\n          onChange={handleChangeTranslate}\n        />\n        <div className={`${styles.word}`}>{ renderWord({string: translate, value: inputTranslate}) }</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Words;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}