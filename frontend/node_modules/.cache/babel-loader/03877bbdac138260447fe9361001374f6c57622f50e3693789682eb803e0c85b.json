{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\projects\\\\JSX\\\\reactProject\\\\frontend\\\\src\\\\Components\\\\Words.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport styles from \"../styles/words.module.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Words = ({\n  word,\n  translate\n}) => {\n  _s();\n  const [inputWord, setInputWord] = useState(\"\");\n  const [inputTranslate, setInputTranslate] = useState(\"\");\n  const inputWordHtml = useRef(\"\");\n  const inputTranslateHtml = useRef(\"\");\n  const handleChangeWord = e => {\n    if (e.target.value[inputWord.length] === \" \") {} else {\n      if (e.target.value.length === 0) {\n        setInputWord(\"\");\n      } else if (e.target.value.length === 15) {\n        e.target.value = e.target.value.slice(0, e.target.value.length - 1);\n      } else if (inputWord.length < e.target.value.length) {\n        setInputWord(inputWord + e.target.value[inputWord.length]);\n        if (inputWord.length < word.length) {\n          e.target.value = word.slice(0, inputWord.length + 1);\n        }\n      } else if (inputWord.length > e.target.value.length) {\n        setInputWord(inputWord.slice(0, inputWord.length - 1));\n        if (inputWord.length > word.length) {\n          e.target.value = word.slice(0, inputWord.length) + inputWord.slice(word.length, inputWord.length - 1);\n        } else {\n          e.target.value = word.slice(0, inputWord.length - 1);\n        }\n      }\n    }\n  };\n  const handleChangeTranslate = e => {\n    setInputTranslate(e.target.value);\n  };\n  const renderWord = ({\n    string,\n    value\n  }) => {\n    const renderedChars = [...string].map((char, index) => {\n      const isMatched = value[index] === char;\n      const color = isMatched ? \"#dcdee3\" : value[index] ? \"#df4f4b\" : \"#54555e\";\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color\n        },\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    });\n    if (value.length > string.length) {\n      const extraChars = [...value].slice(string.length).map((char, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#df4f4b\"\n        },\n        children: char\n      }, string.length + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this));\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [renderedChars, extraChars]\n      }, void 0, true);\n    }\n    return renderedChars;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${styles.inputWord} ${styles.firstInputLength}`,\n        ref: inputWordHtml,\n        onChange: handleChangeWord,\n        spellcheck: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.word}`,\n        children: renderWord({\n          string: word,\n          value: inputWord\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: `${styles.inputWord} ${styles.secondInputLength}`,\n        onChange: handleChangeTranslate,\n        ref: inputTranslateHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.word}`,\n        children: renderWord({\n          string: translate,\n          value: inputTranslate\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Words, \"WtdD9efmuZccvLX8pdoSBj61ALs=\");\n_c = Words;\nexport default Words;\nvar _c;\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"names":["React","useRef","useState","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Words","word","translate","_s","inputWord","setInputWord","inputTranslate","setInputTranslate","inputWordHtml","inputTranslateHtml","handleChangeWord","e","target","value","length","slice","handleChangeTranslate","renderWord","string","renderedChars","map","char","index","isMatched","color","style","children","fileName","_jsxFileName","lineNumber","columnNumber","extraChars","className","container","wrapper","firstInputLength","ref","onChange","spellcheck","secondInputLength","_c","$RefreshReg$"],"sources":["C:/data/projects/JSX/reactProject/frontend/src/Components/Words.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport styles from \"../styles/words.module.css\";\r\n\r\nconst Words = ({ word, translate }) => {\r\n  const [inputWord, setInputWord] = useState(\"\");\r\n  const [inputTranslate, setInputTranslate] = useState(\"\");\r\n\r\n  const inputWordHtml = useRef(\"\")\r\n  const inputTranslateHtml = useRef(\"\")\r\n\r\n  const handleChangeWord = (e) => {\r\n    if (e.target.value[inputWord.length] === \" \"){\r\n      \r\n    } else {\r\n    if (e.target.value.length === 0) {\r\n      setInputWord(\"\");\r\n    } else if (e.target.value.length === 15) {\r\n      e.target.value = e.target.value.slice(0, e.target.value.length-1)\r\n    } else if (inputWord.length < e.target.value.length) {\r\n      setInputWord(inputWord + e.target.value[inputWord.length]);\r\n      if (inputWord.length < word.length) {\r\n        e.target.value = word.slice(0, inputWord.length + 1);\r\n      }\r\n    } else if (inputWord.length > e.target.value.length) {\r\n      setInputWord(inputWord.slice(0, inputWord.length - 1));\r\n      if (inputWord.length > word.length) {\r\n        e.target.value = word.slice(0, inputWord.length) + inputWord.slice(word.length, inputWord.length - 1);\r\n      } else {\r\n        e.target.value = word.slice(0, inputWord.length - 1);\r\n      }\r\n    }}\r\n  };\r\n\r\n  const handleChangeTranslate = (e) => {\r\n    setInputTranslate(e.target.value);\r\n  };\r\n\r\n  const renderWord = ({ string, value }) => {\r\n    const renderedChars = [...string].map((char, index) => {\r\n      const isMatched = value[index] === char;\r\n      const color = isMatched\r\n        ? \"#dcdee3\"\r\n        : value[index]\r\n        ? \"#df4f4b\"\r\n        : \"#54555e\";\r\n      return (\r\n        <span key={index} style={{ color }}>\r\n          {char}\r\n        </span>\r\n      );\r\n    });\r\n  \r\n    if (value.length > string.length) {\r\n      const extraChars = [...value].slice(string.length).map((char, index) => (\r\n        <span key={string.length + index} style={{ color: \"#df4f4b\" }}>\r\n          {char}\r\n        </span>\r\n      ));\r\n      return (\r\n        <>\r\n          {renderedChars}\r\n          {extraChars}\r\n        </>\r\n      );\r\n    }\r\n  \r\n    return renderedChars;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.wrapper}>\r\n        <input\r\n          className={`${styles.inputWord} ${styles.firstInputLength}`}\r\n          ref={inputWordHtml}\r\n          onChange={handleChangeWord}\r\n          spellcheck=\"false\"\r\n        />\r\n        <div className={`${styles.word}`}>\r\n          {renderWord({ string: word, value: inputWord })}\r\n        </div>\r\n      </div>\r\n      <div className={styles.wrapper}>\r\n        <input\r\n          className={`${styles.inputWord} ${styles.secondInputLength}`}\r\n          onChange={handleChangeTranslate}\r\n          ref={inputTranslateHtml}\r\n        />\r\n        <div className={`${styles.word}`}>\r\n          {renderWord({ string: translate, value: inputTranslate })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Words;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}