{"ast":null,"code":"var _jsxFileName = \"/Users/asklit/Documents/frontend/reactProject/frontend/src/Components/Words.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport styles from \"../styles/words.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Words = ({\n  word,\n  translate\n}) => {\n  _s();\n  const [inputWord, setInputWord] = useState('');\n  const [inputTranslate, setInputTranslate] = useState('');\n  const [wordIndex, setWordIndex] = useState(0);\n  const firstInput = useRef(null);\n  const secondInput = useRef(null);\n  const length = () => {\n    console.log();\n  };\n  const renderText = () => {\n    return [...textToMatch].map((char, index) => {\n      const isMatched = inputValue[index] === char;\n      const color = isMatched ? 'green' : inputValue[index] ? 'red' : 'black';\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color\n        },\n        children: char\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: firstInput,\n        className: `${styles.inputWord} ${styles.firstInputLength}`,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: firstOutput,\n        className: `${styles.word} ${styles.white}`,\n        children: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: secondInput,\n        className: `${styles.inputWord} ${styles.secondInputLength}`,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: secondOutput,\n        className: `${styles.word} ${styles.lime}`,\n        children: translate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Words, \"FoddpYTyf1Oa8q/2RW2wed1M3BI=\");\n_c = Words;\nexport default Words;\nvar _c;\n$RefreshReg$(_c, \"Words\");","map":{"version":3,"names":["React","useRef","useState","styles","jsxDEV","_jsxDEV","Words","word","translate","_s","inputWord","setInputWord","inputTranslate","setInputTranslate","wordIndex","setWordIndex","firstInput","secondInput","length","console","log","renderText","textToMatch","map","char","index","isMatched","inputValue","color","style","children","fileName","_jsxFileName","lineNumber","columnNumber","className","container","wrapper","ref","firstInputLength","onChange","handleChange","firstOutput","white","secondInputLength","secondOutput","lime","_c","$RefreshReg$"],"sources":["/Users/asklit/Documents/frontend/reactProject/frontend/src/Components/Words.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styles from \"../styles/words.module.css\";\n\nconst Words = ({ word, translate }) => {\n  const [inputWord, setInputWord] = useState('');\n  const [inputTranslate, setInputTranslate] = useState('');\n  const [wordIndex, setWordIndex] = useState(0);\n\n  const firstInput = useRef(null);\n  const secondInput = useRef(null);\n\n  const length = () => {\n    console.log();\n  };\n\n  const renderText = () => {\n    return [...textToMatch].map((char, index) => {\n      const isMatched = inputValue[index] === char;\n      const color = isMatched ? 'green' : inputValue[index] ? 'red' : 'black';\n      return (\n        <span key={index} style={{ color }}>\n          {char}\n        </span>\n      );\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <input\n          ref={firstInput}\n          className={`${styles.inputWord} ${styles.firstInputLength}`}\n          onChange={handleChange}\n        />\n        <div ref={firstOutput} className={`${styles.word} ${styles.white}`}>{word}</div>\n      </div>\n      <div className={styles.wrapper}>\n        <input\n          ref={secondInput}\n          className={`${styles.inputWord} ${styles.secondInputLength}`}\n          onChange={handleChange}\n        />\n        <div ref={secondOutput} className={`${styles.word} ${styles.lime}`}>{translate}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Words;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}