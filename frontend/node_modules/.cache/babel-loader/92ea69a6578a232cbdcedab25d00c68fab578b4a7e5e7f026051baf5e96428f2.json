{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\projects\\\\JSX\\\\reactProject\\\\frontend\\\\src\\\\Components\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/AdminPanel.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  const [words, setWords] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: ''\n  });\n  const [newAdmin, setNewAdmin] = useState({\n    username: ''\n  });\n  const [newWord, setNewWord] = useState({\n    word: ''\n  });\n  const [activeTab, setActiveTab] = useState('users');\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [someCondition, setSomeCondition] = useState(true); // Пример состояния\n\n  useEffect(() => {\n    // Логичный выход из хука, если условие не выполнено\n    if (!someCondition) {\n      setLoading(false); // Устанавливаем loading в false, если условие не выполнено\n      return; // Выходим из useEffect\n    }\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/api/list/users');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json(); // Преобразуем ответ в JSON\n        setData(result); // Устанавливаем данные\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false); // Устанавливаем loading в false в любом случае\n      }\n    };\n    fetchData(); // Вызываем функцию для получения данных\n  }, [someCondition]); // Добавляем зависимость, если нужно\n\n  // Обработка состояния загрузки и ошибок\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data && data.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: user.name\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this) // Предполагая, что у пользователя есть id и name\n    )\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }, this);\n  console.log(data);\n  useEffect(() => {\n    // Загрузка пользователей, админов и слов из API (здесь можно заменить на реальные запросы)\n    setUsers([{\n      id: 1,\n      username: 'user1'\n    }, {\n      id: 2,\n      username: 'user2'\n    }]);\n    setAdmins([{\n      id: 1,\n      username: 'admin1'\n    }, {\n      id: 2,\n      username: 'admin2'\n    }]);\n    setWords([{\n      id: 1,\n      word: 'word1'\n    }, {\n      id: 2,\n      word: 'word2'\n    }]);\n  }, []);\n  const handleSubmit = async (event, type) => {\n    event.preventDefault();\n    let newData;\n    if (type === 'user') {\n      try {\n        const response = await fetch('/users/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const user = await response.json();\n        setUsers([...users, user]);\n        setNewUser({\n          username: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'admin') {\n      try {\n        const response = await fetch('/admins/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newAdmin)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const admin = await response.json();\n        setAdmins([...admins, admin]);\n        setNewAdmin({\n          username: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'word') {\n      try {\n        const response = await fetch('/words/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newWord)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const word = await response.json();\n        setWords([...words, word]);\n        setNewWord({\n          word: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabs,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'users' ? styles.active : ''}`,\n        onClick: () => setActiveTab('users'),\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'admins' ? styles.active : ''}`,\n        onClick: () => setActiveTab('admins'),\n        children: \"Admins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'words' ? styles.active : ''}`,\n        onClick: () => setActiveTab('words'),\n        children: \"Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), activeTab === 'users' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'user'),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          value: newUser.username,\n          onChange: e => setNewUser({\n            username: e.target.value\n          }),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), activeTab === 'admins' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'admin'),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          value: newAdmin.username,\n          onChange: e => setNewAdmin({\n            username: e.target.value\n          }),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Add Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this)]\n          }, admin.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), activeTab === 'words' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'word'),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"word\",\n          placeholder: \"Word\",\n          value: newWord.word,\n          onChange: e => setNewWord({\n            word: e.target.value\n          }),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Add Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: words.map(word => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: word.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: word.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"oYyr66PDpwslN4h/Avfizko4Tlw=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPanel","_s","users","setUsers","admins","setAdmins","words","setWords","newUser","setNewUser","username","newAdmin","setNewAdmin","newWord","setNewWord","word","activeTab","setActiveTab","data","setData","loading","setLoading","error","setError","someCondition","setSomeCondition","fetchData","response","fetch","ok","Error","result","json","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","user","name","id","console","log","handleSubmit","event","type","preventDefault","newData","method","headers","body","JSON","stringify","admin","className","container","tabs","tab","active","onClick","onSubmit","e","form","placeholder","value","onChange","target","input","button","table","actionButton","_c","$RefreshReg$"],"sources":["C:/data/projects/JSX/reactProject/frontend/src/Components/AdminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from '../styles/AdminPanel.module.css';\r\n\r\nfunction AdminPanel() {\r\n  const [users, setUsers] = useState([]);\r\n  const [admins, setAdmins] = useState([]);\r\n  const [words, setWords] = useState([]);\r\n\r\n  const [newUser, setNewUser] = useState({ username: '' });\r\n  const [newAdmin, setNewAdmin] = useState({ username: '' });\r\n  const [newWord, setNewWord] = useState({ word: '' });\r\n\r\n  const [activeTab, setActiveTab] = useState('users');\r\n\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [someCondition, setSomeCondition] = useState(true); // Пример состояния\r\n\r\n  useEffect(() => {\r\n    // Логичный выход из хука, если условие не выполнено\r\n    if (!someCondition) {\r\n        setLoading(false); // Устанавливаем loading в false, если условие не выполнено\r\n        return; // Выходим из useEffect\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:8000/api/list/users');\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            const result = await response.json(); // Преобразуем ответ в JSON\r\n            setData(result); // Устанавливаем данные\r\n        } catch (error) {\r\n            setError(error);\r\n        } finally {\r\n            setLoading(false); // Устанавливаем loading в false в любом случае\r\n        }\r\n    };\r\n\r\n    fetchData(); // Вызываем функцию для получения данных\r\n\r\n  }, [someCondition]); // Добавляем зависимость, если нужно\r\n\r\n  // Обработка состояния загрузки и ошибок\r\n  if (loading) {\r\n      return <div>Loading...</div>;\r\n  }\r\n\r\n  if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n  return (\r\n      <div>\r\n          {data && data.map(user => (\r\n              <div key={user.id}>{user.name}</div> // Предполагая, что у пользователя есть id и name\r\n          ))}\r\n      </div>\r\n  );\r\n\r\n  console.log(data)\r\n  \r\n  useEffect(() => {\r\n    // Загрузка пользователей, админов и слов из API (здесь можно заменить на реальные запросы)\r\n    setUsers([{ id: 1, username: 'user1' }, { id: 2, username: 'user2' }]);\r\n    setAdmins([{ id: 1, username: 'admin1' }, { id: 2, username: 'admin2' }]);\r\n    setWords([{ id: 1, word: 'word1' }, { id: 2, word: 'word2' }]);\r\n  }, []);\r\n\r\n  const handleSubmit = async (event, type) => {\r\n    event.preventDefault();\r\n    let newData;\r\n    if (type === 'user') {\r\n      try {\r\n        const response = await fetch('/users/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newUser)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const user = await response.json();\r\n        setUsers([...users, user]);\r\n        setNewUser({ username: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'admin') {\r\n      try {\r\n        const response = await fetch('/admins/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newAdmin)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const admin = await response.json();\r\n        setAdmins([...admins, admin]);\r\n        setNewAdmin({ username: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'word') {\r\n      try {\r\n        const response = await fetch('/words/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newWord)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const word = await response.json();\r\n        setWords([...words, word]);\r\n        setNewWord({ word: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2>Admin Panel</h2>\r\n      <div className={styles.tabs}>\r\n        <button className={`${styles.tab} ${activeTab === 'users' ? styles.active : ''}`} onClick={() => setActiveTab('users')}>Users</button>\r\n        <button className={`${styles.tab} ${activeTab === 'admins' ? styles.active : ''}`} onClick={() => setActiveTab('admins')}>Admins</button>\r\n        <button className={`${styles.tab} ${activeTab === 'words' ? styles.active : ''}`} onClick={() => setActiveTab('words')}>Words</button>\r\n      </div>\r\n\r\n      {activeTab === 'users' && (\r\n        <>\r\n          <form onSubmit={(e) => handleSubmit(e, 'user')} className={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              value={newUser.username}\r\n              onChange={(e) => setNewUser({ username: e.target.value })}\r\n              className={styles.input}\r\n            />\r\n            <button type=\"submit\" className={styles.button}>Add User</button>\r\n          </form>\r\n          <table className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Username</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>\r\n                    <button className={styles.actionButton}>Edit</button>\r\n                    <button className={styles.actionButton}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n\r\n      {activeTab === 'admins' && (\r\n        <>\r\n          <form onSubmit={(e) => handleSubmit(e, 'admin')} className={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              value={newAdmin.username}\r\n              onChange={(e) => setNewAdmin({ username: e.target.value })}\r\n              className={styles.input}\r\n            />\r\n            <button type=\"submit\" className={styles.button}>Add Admin</button>\r\n          </form>\r\n          <table className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Username</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admins.map(admin => (\r\n                <tr key={admin.id}>\r\n                  <td>{admin.id}</td>\r\n                  <td>{admin.username}</td>\r\n                  <td>\r\n                    <button className={styles.actionButton}>Edit</button>\r\n                    <button className={styles.actionButton}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n\r\n      {activeTab === 'words' && (\r\n        <>\r\n          <form onSubmit={(e) => handleSubmit(e, 'word')} className={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"word\"\r\n              placeholder=\"Word\"\r\n              value={newWord.word}\r\n              onChange={(e) => setNewWord({ word: e.target.value })}\r\n              className={styles.input}\r\n            />\r\n            <button type=\"submit\" className={styles.button}>Add Word</button>\r\n          </form>\r\n          <table className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Word</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {words.map(word => (\r\n                <tr key={word.id}>\r\n                  <td>{word.id}</td>\r\n                  <td>{word.word}</td>\r\n                  <td>\r\n                    <button className={styles.actionButton}>Edit</button>\r\n                    <button className={styles.actionButton}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}