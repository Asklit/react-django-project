{"ast":null,"code":"var _jsxFileName = \"/Users/asklit/Documents/frontend/reactProject/frontend/src/Components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport Words from \"./Words\";\nimport styles from \"../styles/main.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  inputRefs = useRef([]);\n  const switchFocus = index => {\n    const nextIndex = index + 1;\n    if (nextIndex < inputRefs.current.length) {\n      inputRefs.current[nextIndex].focus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: \"\\u0412\\u0432\\u043E\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043B\\u043E\\u0432\\u0430 \\u0438 \\u0438\\u0445 \\u043F\\u0435\\u0440\\u0435\\u0432\\u043E\\u0434 \\u0434\\u043B\\u044F \\u0437\\u0430\\u043F\\u043E\\u043C\\u0438\\u043D\\u0430\\u043D\\u0438\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.words,\n        children: [/*#__PURE__*/_jsxDEV(Words, {\n          word: \"Word\",\n          translate: \"\\u0421\\u043B\\u043E\\u0432\\u043E\",\n          index: \"0\",\n          ref: el => inputRefs.current[index] = el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Words, {\n          word: \"Inspire\",\n          translate: \"\\u0412\\u0434\\u043E\\u0445\\u043D\\u043E\\u0432\\u043B\\u044F\\u0442\\u044C\",\n          index: \"2\",\n          ref: el => inputRefs.current[index] = el,\n          \"part-of-speech\": true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Words, {\n          word: \"Constraint\",\n          translate: \"\\u041E\\u0433\\u0440\\u0430\\u043D\\u0438\\u0447\\u0435\\u043D\\u0438\\u0435\",\n          index: \"4\",\n          ref: el => inputRefs.current[index] = el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"J9pzIsEOVEZ74gjFtMkCj+5Po7s=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useRef","Words","styles","jsxDEV","_jsxDEV","Main","_s","inputRefs","switchFocus","index","nextIndex","current","length","focus","className","container","children","wrapper","title","fileName","_jsxFileName","lineNumber","columnNumber","words","word","translate","ref","el","_c","$RefreshReg$"],"sources":["/Users/asklit/Documents/frontend/reactProject/frontend/src/Components/Main.jsx"],"sourcesContent":["import React, { useRef }from \"react\";\nimport Words from \"./Words\";\nimport styles from \"../styles/main.module.css\";\n\nconst Main = () => {\n  inputRefs = useRef([])\n  const switchFocus = (index) => {\n    const nextIndex = index + 1;\n    if (nextIndex < inputRefs.current.length) {\n      inputRefs.current[nextIndex].focus();\n    }\n  }\n  return (\n    <div className={styles.container}>\n      <div className={styles.wrapper}>\n        <div className={styles.title}>\n          Вводите слова и их перевод для запоминания\n        </div>\n        <div className={styles.words}>\n          <Words word=\"Word\" translate=\"Слово\" index=\"0\" ref={(el) => (inputRefs.current[index] = el)} />\n          <Words word=\"Inspire\" translate=\"Вдохновлять\" index=\"2\" ref={(el) => (inputRefs.current[index] = el)}part-of-speech  />\n          <Words word=\"Constraint\" translate=\"Ограничение\" index=\"4\" ref={(el) => (inputRefs.current[index] = el)} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAO,OAAO;AACpC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjBC,SAAS,GAAGP,MAAM,CAAC,EAAE,CAAC;EACtB,MAAMQ,WAAW,GAAIC,KAAK,IAAK;IAC7B,MAAMC,SAAS,GAAGD,KAAK,GAAG,CAAC;IAC3B,IAAIC,SAAS,GAAGH,SAAS,CAACI,OAAO,CAACC,MAAM,EAAE;MACxCL,SAAS,CAACI,OAAO,CAACD,SAAS,CAAC,CAACG,KAAK,CAAC,CAAC;IACtC;EACF,CAAC;EACD,oBACET,OAAA;IAAKU,SAAS,EAAEZ,MAAM,CAACa,SAAU;IAAAC,QAAA,eAC/BZ,OAAA;MAAKU,SAAS,EAAEZ,MAAM,CAACe,OAAQ;MAAAD,QAAA,gBAC7BZ,OAAA;QAAKU,SAAS,EAAEZ,MAAM,CAACgB,KAAM;QAAAF,QAAA,EAAC;MAE9B;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlB,OAAA;QAAKU,SAAS,EAAEZ,MAAM,CAACqB,KAAM;QAAAP,QAAA,gBAC3BZ,OAAA,CAACH,KAAK;UAACuB,IAAI,EAAC,MAAM;UAACC,SAAS,EAAC,gCAAO;UAAChB,KAAK,EAAC,GAAG;UAACiB,GAAG,EAAGC,EAAE,IAAMpB,SAAS,CAACI,OAAO,CAACF,KAAK,CAAC,GAAGkB;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/FlB,OAAA,CAACH,KAAK;UAACuB,IAAI,EAAC,SAAS;UAACC,SAAS,EAAC,oEAAa;UAAChB,KAAK,EAAC,GAAG;UAACiB,GAAG,EAAGC,EAAE,IAAMpB,SAAS,CAACI,OAAO,CAACF,KAAK,CAAC,GAAGkB,EAAI;UAAA;QAAc;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACvHlB,OAAA,CAACH,KAAK;UAACuB,IAAI,EAAC,YAAY;UAACC,SAAS,EAAC,oEAAa;UAAChB,KAAK,EAAC,GAAG;UAACiB,GAAG,EAAGC,EAAE,IAAMpB,SAAS,CAACI,OAAO,CAACF,KAAK,CAAC,GAAGkB;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAtBID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAwBV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}