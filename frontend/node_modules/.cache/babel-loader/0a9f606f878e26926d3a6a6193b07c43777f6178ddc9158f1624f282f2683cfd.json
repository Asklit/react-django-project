{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\projects\\\\JSX\\\\reactProject\\\\frontend\\\\src\\\\Components\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/AdminPanel.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  const [words, setWords] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: ''\n  });\n  const [newAdmin, setNewAdmin] = useState({\n    username: ''\n  });\n  const [newWord, setNewWord] = useState({\n    word: ''\n  });\n  const [activeTab, setActiveTab] = useState('users');\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:8000/api/list/users/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setData(data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n  useEffect(() => {\n    // Загрузка пользователей, админов и слов из API (здесь можно заменить на реальные запросы)\n    setUsers([{\n      id: 1,\n      username: 'user1'\n    }, {\n      id: 2,\n      username: 'user2'\n    }]);\n    setAdmins([{\n      id: 1,\n      username: 'admin1'\n    }, {\n      id: 2,\n      username: 'admin2'\n    }]);\n    setWords([{\n      id: 1,\n      word: 'word1'\n    }, {\n      id: 2,\n      word: 'word2'\n    }]);\n  }, []);\n  const handleSubmit = async (event, type) => {\n    event.preventDefault();\n    let newData;\n    if (type === 'user') {\n      try {\n        const response = await fetch('/users/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const user = await response.json();\n        setUsers([...users, user]);\n        setNewUser({\n          username: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'admin') {\n      try {\n        const response = await fetch('/admins/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newAdmin)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const admin = await response.json();\n        setAdmins([...admins, admin]);\n        setNewAdmin({\n          username: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    } else if (type === 'word') {\n      try {\n        const response = await fetch('/words/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newWord)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const word = await response.json();\n        setWords([...words, word]);\n        setNewWord({\n          word: ''\n        });\n      } catch (error) {\n        console.error('There has been a problem with your fetch operation:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabs,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'users' ? styles.active : ''}`,\n        onClick: () => setActiveTab('users'),\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'admins' ? styles.active : ''}`,\n        onClick: () => setActiveTab('admins'),\n        children: \"Admins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'words' ? styles.active : ''}`,\n        onClick: () => setActiveTab('words'),\n        children: \"Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), activeTab === 'users' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'user'),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          value: newUser.username,\n          onChange: e => setNewUser({\n            username: e.target.value\n          }),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), activeTab === 'admins' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'admin'),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Username\",\n          value: newAdmin.username,\n          onChange: e => setNewAdmin({\n            username: e.target.value\n          }),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Add Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: admin.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, admin.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), activeTab === 'words' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'word'),\n        className: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"word\",\n          placeholder: \"Word\",\n          value: newWord.word,\n          onChange: e => setNewWord({\n            word: e.target.value\n          }),\n          className: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Add Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.table,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Word\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: words.map(word => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: word.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: word.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.actionButton,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"SfiVee3PZBjXijczUAX3hLKh0mQ=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPanel","_s","users","setUsers","admins","setAdmins","words","setWords","newUser","setNewUser","username","newAdmin","setNewAdmin","newWord","setNewWord","word","activeTab","setActiveTab","data","setData","fetch","then","response","ok","Error","json","catch","error","setError","id","handleSubmit","event","type","preventDefault","newData","method","headers","body","JSON","stringify","user","console","admin","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","tabs","tab","active","onClick","onSubmit","e","form","name","placeholder","value","onChange","target","input","button","table","map","actionButton","_c","$RefreshReg$"],"sources":["C:/data/projects/JSX/reactProject/frontend/src/Components/AdminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from '../styles/AdminPanel.module.css';\r\n\r\nfunction AdminPanel() {\r\n  const [users, setUsers] = useState([]);\r\n  const [admins, setAdmins] = useState([]);\r\n  const [words, setWords] = useState([]);\r\n\r\n  const [newUser, setNewUser] = useState({ username: '' });\r\n  const [newAdmin, setNewAdmin] = useState({ username: '' });\r\n  const [newWord, setNewWord] = useState({ word: '' });\r\n\r\n  const [activeTab, setActiveTab] = useState('users');\r\n\r\n  const [data, setData] = useState(null);\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/api/list/users/')\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                throw new Error('Network response was not ok');\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            setData(data);\r\n        })\r\n        .catch(error => {\r\n            setError(error);\r\n        });\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    // Загрузка пользователей, админов и слов из API (здесь можно заменить на реальные запросы)\r\n    setUsers([{ id: 1, username: 'user1' }, { id: 2, username: 'user2' }]);\r\n    setAdmins([{ id: 1, username: 'admin1' }, { id: 2, username: 'admin2' }]);\r\n    setWords([{ id: 1, word: 'word1' }, { id: 2, word: 'word2' }]);\r\n  }, []);\r\n\r\n  const handleSubmit = async (event, type) => {\r\n    event.preventDefault();\r\n    let newData;\r\n    if (type === 'user') {\r\n      try {\r\n        const response = await fetch('/users/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newUser)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const user = await response.json();\r\n        setUsers([...users, user]);\r\n        setNewUser({ username: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'admin') {\r\n      try {\r\n        const response = await fetch('/admins/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newAdmin)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const admin = await response.json();\r\n        setAdmins([...admins, admin]);\r\n        setNewAdmin({ username: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    } else if (type === 'word') {\r\n      try {\r\n        const response = await fetch('/words/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newWord)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const word = await response.json();\r\n        setWords([...words, word]);\r\n        setNewWord({ word: '' });\r\n      } catch (error) {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2>Admin Panel</h2>\r\n      <div className={styles.tabs}>\r\n        <button className={`${styles.tab} ${activeTab === 'users' ? styles.active : ''}`} onClick={() => setActiveTab('users')}>Users</button>\r\n        <button className={`${styles.tab} ${activeTab === 'admins' ? styles.active : ''}`} onClick={() => setActiveTab('admins')}>Admins</button>\r\n        <button className={`${styles.tab} ${activeTab === 'words' ? styles.active : ''}`} onClick={() => setActiveTab('words')}>Words</button>\r\n      </div>\r\n\r\n      {activeTab === 'users' && (\r\n        <>\r\n          <form onSubmit={(e) => handleSubmit(e, 'user')} className={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              value={newUser.username}\r\n              onChange={(e) => setNewUser({ username: e.target.value })}\r\n              className={styles.input}\r\n            />\r\n            <button type=\"submit\" className={styles.button}>Add User</button>\r\n          </form>\r\n          <table className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Username</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map(user => (\r\n                <tr key={user.id}>\r\n                  <td>{user.id}</td>\r\n                  <td>{user.username}</td>\r\n                  <td>\r\n                    <button className={styles.actionButton}>Edit</button>\r\n                    <button className={styles.actionButton}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n\r\n      {activeTab === 'admins' && (\r\n        <>\r\n          <form onSubmit={(e) => handleSubmit(e, 'admin')} className={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              value={newAdmin.username}\r\n              onChange={(e) => setNewAdmin({ username: e.target.value })}\r\n              className={styles.input}\r\n            />\r\n            <button type=\"submit\" className={styles.button}>Add Admin</button>\r\n          </form>\r\n          <table className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Username</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {admins.map(admin => (\r\n                <tr key={admin.id}>\r\n                  <td>{admin.id}</td>\r\n                  <td>{admin.username}</td>\r\n                  <td>\r\n                    <button className={styles.actionButton}>Edit</button>\r\n                    <button className={styles.actionButton}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n\r\n      {activeTab === 'words' && (\r\n        <>\r\n          <form onSubmit={(e) => handleSubmit(e, 'word')} className={styles.form}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"word\"\r\n              placeholder=\"Word\"\r\n              value={newWord.word}\r\n              onChange={(e) => setNewWord({ word: e.target.value })}\r\n              className={styles.input}\r\n            />\r\n            <button type=\"submit\" className={styles.button}>Add Word</button>\r\n          </form>\r\n          <table className={styles.table}>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Word</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {words.map(word => (\r\n                <tr key={word.id}>\r\n                  <td>{word.id}</td>\r\n                  <td>{word.word}</td>\r\n                  <td>\r\n                    <button className={styles.actionButton}>Edit</button>\r\n                    <button className={styles.actionButton}>Delete</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPanel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}