{"ast":null,"code":"var _jsxFileName = \"C:\\\\data\\\\projects\\\\JSX\\\\reactProject\\\\frontend\\\\src\\\\Components\\\\AdminPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/AdminPanel.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPanel() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [admins, setAdmins] = useState([]);\n  const [words, setWords] = useState([]);\n  const [newUser, setNewUser] = useState({\n    username: '',\n    email: '',\n    password_hash: '',\n    english_level: 'A1',\n    is_email_verificated: false,\n    days_in_berserk: 0\n  });\n  const [newAdmin, setNewAdmin] = useState({\n    username: ''\n  });\n  const [newWord, setNewWord] = useState({\n    word: ''\n  });\n  const [activeTab, setActiveTab] = useState('users');\n  useEffect(() => {\n    // Загрузка пользователей из API\n    fetch('/users/').then(response => response.json()).then(data => setUsers(data)).catch(error => console.error('Error fetching users:', error));\n\n    // Загрузка админов из API\n    fetch('/admins/').then(response => response.json()).then(data => setAdmins(data)).catch(error => console.error('Error fetching admins:', error));\n\n    // Загрузка слов из API\n    fetch('/words/').then(response => response.json()).then(data => setWords(data)).catch(error => console.error('Error fetching words:', error));\n  }, []);\n  const handleSubmit = async (event, type) => {\n    event.preventDefault();\n    let newData;\n    if (type === 'user') {\n      try {\n        const response = await fetch('/users/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newUser)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        newData = [...users, data];\n        setUsers(newData);\n      } catch (error) {\n        console.error('Error adding user:', error);\n      }\n      setNewUser({\n        username: '',\n        email: '',\n        password_hash: '',\n        english_level: 'A1',\n        is_email_verificated: false,\n        days_in_berserk: 0\n      });\n    } else if (type === 'admin') {\n      try {\n        const response = await fetch('/admins/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newAdmin)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        newData = [...admins, data];\n        setAdmins(newData);\n      } catch (error) {\n        console.error('Error adding admin:', error);\n      }\n      setNewAdmin({\n        username: ''\n      });\n    } else if (type === 'word') {\n      try {\n        const response = await fetch('/words/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newWord)\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        newData = [...words, data];\n        setWords(newData);\n      } catch (error) {\n        console.error('Error adding word:', error);\n      }\n      setNewWord({\n        word: ''\n      });\n    }\n  };\n  const handleUpdate = async (event, type, id, updatedData) => {\n    event.preventDefault();\n    try {\n      let response;\n      if (type === 'user') {\n        response = await fetch(`/users/${id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedData)\n        });\n        const data = await response.json();\n        setUsers(users.map(user => user.id === id ? data : user));\n      } else if (type === 'admin') {\n        response = await fetch(`/admins/${id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedData)\n        });\n        const data = await response.json();\n        setAdmins(admins.map(admin => admin.id === id ? data : admin));\n      } else if (type === 'word') {\n        response = await fetch(`/words/${id}/`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(updatedData)\n        });\n        const data = await response.json();\n        setWords(words.map(word => word.id === id ? data : word));\n      }\n      if (!response.ok) throw new Error('Network response was not ok');\n    } catch (error) {\n      console.error(`Error updating ${type}:`, error);\n    }\n  };\n  const handleDelete = async (event, type, id) => {\n    event.preventDefault();\n    try {\n      let response;\n      if (type === 'user') {\n        response = await fetch(`/users/${id}/`, {\n          method: 'DELETE'\n        });\n        setUsers(users.filter(user => user.id !== id));\n      } else if (type === 'admin') {\n        response = await fetch(`/admins/${id}/`, {\n          method: 'DELETE'\n        });\n        setAdmins(admins.filter(admin => admin.id !== id));\n      } else if (type === 'word') {\n        response = await fetch(`/words/${id}/`, {\n          method: 'DELETE'\n        });\n        setWords(words.filter(word => word.id !== id));\n      }\n      if (!response.ok) throw new Error('Network response was not ok');\n    } catch (error) {\n      console.error(`Error deleting ${type}:`, error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tabs,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'users' ? styles.active : ''}`,\n        onClick: () => setActiveTab('users'),\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'admins' ? styles.active : ''}`,\n        onClick: () => setActiveTab('admins'),\n        children: \"Admins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${styles.tab} ${activeTab === 'words' ? styles.active : ''}`,\n        onClick: () => setActiveTab('words'),\n        children: \"Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), activeTab === 'users' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'user'),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: newUser.username,\n          onChange: e => setNewUser({\n            ...newUser,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: newUser.email,\n          onChange: e => setNewUser({\n            ...newUser,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password Hash\",\n          value: newUser.password_hash,\n          onChange: e => setNewUser({\n            ...newUser,\n            password_hash: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newUser.english_level,\n          onChange: e => setNewUser({\n            ...newUser,\n            english_level: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"A1\",\n            children: \"A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"A2\",\n            children: \"A2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B1\",\n            children: \"B1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"B2\",\n            children: \"B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"C1\",\n            children: \"C1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"C2\",\n            children: \"C2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Days in Berserk\",\n          value: newUser.days_in_berserk,\n          onChange: e => setNewUser({\n            ...newUser,\n            days_in_berserk: parseInt(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.item,\n          children: [user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDelete(e, 'user', user.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleUpdate(e, 'user', user.id, {\n              username: user.username,\n              email: user.email,\n              password_hash: user.password_hash,\n              english_level: user.english_level,\n              is_email_verificated: user.is_email_verificated,\n              days_in_berserk: user.days_in_berserk\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              value: user.username,\n              onChange: e => handleUpdate(e, 'user', user.id, {\n                ...user,\n                username: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), activeTab === 'admins' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Admins\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'admin'),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: newAdmin.username,\n          onChange: e => setNewAdmin({\n            ...newAdmin,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: admins.map(admin => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.item,\n          children: [admin.username, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDelete(e, 'admin', admin.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleUpdate(e, 'admin', admin.id, {\n              username: admin.username\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Username\",\n              value: admin.username,\n              onChange: e => handleUpdate(e, 'admin', admin.id, {\n                ...admin,\n                username: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 17\n          }, this)]\n        }, admin.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }, this), activeTab === 'words' && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Words\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e, 'word'),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Word\",\n          value: newWord.word,\n          onChange: e => setNewWord({\n            ...newWord,\n            word: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: words.map(word => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.item,\n          children: [word.word, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleDelete(e, 'word', word.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => handleUpdate(e, 'word', word.id, {\n              word: word.word\n            }),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Word\",\n              value: word.word,\n              onChange: e => handleUpdate(e, 'word', word.id, {\n                ...word,\n                word: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this)]\n        }, word.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPanel, \"dxL4K7V48LCnqJA1hkflpVodIVE=\");\n_c = AdminPanel;\n;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","styles","jsxDEV","_jsxDEV","AdminPanel","_s","users","setUsers","admins","setAdmins","words","setWords","newUser","setNewUser","username","email","password_hash","english_level","is_email_verificated","days_in_berserk","newAdmin","setNewAdmin","newWord","setNewWord","word","activeTab","setActiveTab","fetch","then","response","json","data","catch","error","console","handleSubmit","event","type","preventDefault","newData","method","headers","body","JSON","stringify","ok","Error","handleUpdate","id","updatedData","map","user","admin","handleDelete","filter","className","container","children","fileName","_jsxFileName","lineNumber","columnNumber","tabs","tab","active","onClick","onSubmit","e","placeholder","value","onChange","target","parseInt","list","item","_c","$RefreshReg$"],"sources":["C:/data/projects/JSX/reactProject/frontend/src/Components/AdminPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from '../styles/AdminPanel.module.css';\r\n\r\nfunction AdminPanel() {\r\n  const [users, setUsers] = useState([]);\r\n  const [admins, setAdmins] = useState([]);\r\n  const [words, setWords] = useState([]);\r\n\r\n  const [newUser, setNewUser] = useState({ username: '', email: '', password_hash: '', english_level: 'A1', is_email_verificated: false, days_in_berserk: 0 });\r\n  const [newAdmin, setNewAdmin] = useState({ username: '' });\r\n  const [newWord, setNewWord] = useState({ word: '' });\r\n\r\n  const [activeTab, setActiveTab] = useState('users');\r\n\r\n  useEffect(() => {\r\n    // Загрузка пользователей из API\r\n    fetch('/users/')\r\n      .then(response => response.json())\r\n      .then(data => setUsers(data))\r\n      .catch(error => console.error('Error fetching users:', error));\r\n\r\n    // Загрузка админов из API\r\n    fetch('/admins/')\r\n      .then(response => response.json())\r\n      .then(data => setAdmins(data))\r\n      .catch(error => console.error('Error fetching admins:', error));\r\n\r\n    // Загрузка слов из API\r\n    fetch('/words/')\r\n      .then(response => response.json())\r\n      .then(data => setWords(data))\r\n      .catch(error => console.error('Error fetching words:', error));\r\n  }, []);\r\n\r\n  const handleSubmit = async (event, type) => {\r\n    event.preventDefault();\r\n    let newData;\r\n    if (type === 'user') {\r\n      try {\r\n        const response = await fetch('/users/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newUser)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const data = await response.json();\r\n        newData = [...users, data];\r\n        setUsers(newData);\r\n      } catch (error) {\r\n        console.error('Error adding user:', error);\r\n      }\r\n      setNewUser({ username: '', email: '', password_hash: '', english_level: 'A1', is_email_verificated: false, days_in_berserk: 0 });\r\n    } else if (type === 'admin') {\r\n      try {\r\n        const response = await fetch('/admins/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newAdmin)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const data = await response.json();\r\n        newData = [...admins, data];\r\n        setAdmins(newData);\r\n      } catch (error) {\r\n        console.error('Error adding admin:', error);\r\n      }\r\n      setNewAdmin({ username: '' });\r\n    } else if (type === 'word') {\r\n      try {\r\n        const response = await fetch('/words/', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(newWord)\r\n        });\r\n        if (!response.ok) throw new Error('Network response was not ok');\r\n        const data = await response.json();\r\n        newData = [...words, data];\r\n        setWords(newData);\r\n      } catch (error) {\r\n        console.error('Error adding word:', error);\r\n      }\r\n      setNewWord({ word: '' });\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async (event, type, id, updatedData) => {\r\n    event.preventDefault();\r\n    try {\r\n      let response;\r\n      if (type === 'user') {\r\n        response = await fetch(`/users/${id}/`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(updatedData)\r\n        });\r\n        const data = await response.json();\r\n        setUsers(users.map(user => (user.id === id ? data : user)));\r\n      } else if (type === 'admin') {\r\n        response = await fetch(`/admins/${id}/`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(updatedData)\r\n        });\r\n        const data = await response.json();\r\n        setAdmins(admins.map(admin => (admin.id === id ? data : admin)));\r\n      } else if (type === 'word') {\r\n        response = await fetch(`/words/${id}/`, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(updatedData)\r\n        });\r\n        const data = await response.json();\r\n        setWords(words.map(word => (word.id === id ? data : word)));\r\n      }\r\n      if (!response.ok) throw new Error('Network response was not ok');\r\n    } catch (error) {\r\n      console.error(`Error updating ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (event, type, id) => {\r\n    event.preventDefault();\r\n    try {\r\n      let response;\r\n      if (type === 'user') {\r\n        response = await fetch(`/users/${id}/`, {\r\n          method: 'DELETE'\r\n        });\r\n        setUsers(users.filter(user => user.id !== id));\r\n      } else if (type === 'admin') {\r\n        response = await fetch(`/admins/${id}/`, {\r\n          method: 'DELETE'\r\n        });\r\n        setAdmins(admins.filter(admin => admin.id !== id));\r\n      } else if (type === 'word') {\r\n        response = await fetch(`/words/${id}/`, {\r\n          method: 'DELETE'\r\n        });\r\n        setWords(words.filter(word => word.id !== id));\r\n      }\r\n      if (!response.ok) throw new Error('Network response was not ok');\r\n    } catch (error) {\r\n      console.error(`Error deleting ${type}:`, error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2>Admin Panel</h2>\r\n      <div className={styles.tabs}>\r\n        <button className={`${styles.tab} ${activeTab === 'users' ? styles.active : ''}`} onClick={() => setActiveTab('users')}>Users</button>\r\n        <button className={`${styles.tab} ${activeTab === 'admins' ? styles.active : ''}`} onClick={() => setActiveTab('admins')}>Admins</button>\r\n        <button className={`${styles.tab} ${activeTab === 'words' ? styles.active : ''}`} onClick={() => setActiveTab('words')}>Words</button>\r\n      </div>\r\n\r\n      {activeTab === 'users' && (\r\n        <div>\r\n          <h3>Users</h3>\r\n          <form onSubmit={(e) => handleSubmit(e, 'user')}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={newUser.username}\r\n              onChange={(e) => setNewUser({ ...newUser, username: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              value={newUser.email}\r\n              onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password Hash\"\r\n              value={newUser.password_hash}\r\n              onChange={(e) => setNewUser({ ...newUser, password_hash: e.target.value })}\r\n            />\r\n            <select\r\n              value={newUser.english_level}\r\n              onChange={(e) => setNewUser({ ...newUser, english_level: e.target.value })}\r\n            >\r\n              <option value=\"A1\">A1</option>\r\n              <option value=\"A2\">A2</option>\r\n              <option value=\"B1\">B1</option>\r\n              <option value=\"B2\">B2</option>\r\n              <option value=\"C1\">C1</option>\r\n              <option value=\"C2\">C2</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Days in Berserk\"\r\n              value={newUser.days_in_berserk}\r\n              onChange={(e) => setNewUser({ ...newUser, days_in_berserk: parseInt(e.target.value) })}\r\n            />\r\n            <button type=\"submit\">Add User</button>\r\n          </form>\r\n          <ul className={styles.list}>\r\n            {users.map(user => (\r\n              <li key={user.id} className={styles.item}>\r\n                {user.username}\r\n                <button onClick={(e) => handleDelete(e, 'user', user.id)}>Delete</button>\r\n                {/* Простая форма для обновления */}\r\n                <form onSubmit={(e) => handleUpdate(e, 'user', user.id, {\r\n                  username: user.username,\r\n                  email: user.email,\r\n                  password_hash: user.password_hash,\r\n                  english_level: user.english_level,\r\n                  is_email_verificated: user.is_email_verificated,\r\n                  days_in_berserk: user.days_in_berserk\r\n                })}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={user.username}\r\n                    onChange={(e) => handleUpdate(e, 'user', user.id, { ...user, username: e.target.value })}\r\n                  />\r\n                  <button type=\"submit\">Update</button>\r\n                </form>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'admins' && (\r\n        <div>\r\n          <h3>Admins</h3>\r\n          <form onSubmit={(e) => handleSubmit(e, 'admin')}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              value={newAdmin.username}\r\n              onChange={(e) => setNewAdmin({ ...newAdmin, username: e.target.value })}\r\n            />\r\n            <button type=\"submit\">Add Admin</button>\r\n          </form>\r\n          <ul className={styles.list}>\r\n            {admins.map(admin => (\r\n              <li key={admin.id} className={styles.item}>\r\n                {admin.username}\r\n                <button onClick={(e) => handleDelete(e, 'admin', admin.id)}>Delete</button>\r\n                {/* Простая форма для обновления */}\r\n                <form onSubmit={(e) => handleUpdate(e, 'admin', admin.id, {\r\n                  username: admin.username\r\n                })}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={admin.username}\r\n                    onChange={(e) => handleUpdate(e, 'admin', admin.id, { ...admin, username: e.target.value })}\r\n                  />\r\n                  <button type=\"submit\">Update</button>\r\n                </form>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === 'words' && (\r\n        <div>\r\n          <h3>Words</h3>\r\n          <form onSubmit={(e) => handleSubmit(e, 'word')}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Word\"\r\n              value={newWord.word}\r\n              onChange={(e) => setNewWord({ ...newWord, word: e.target.value })}\r\n            />\r\n            <button type=\"submit\">Add Word</button>\r\n          </form>\r\n          <ul className={styles.list}>\r\n            {words.map(word => (\r\n              <li key={word.id} className={styles.item}>\r\n                {word.word}\r\n                <button onClick={(e) => handleDelete(e, 'word', word.id)}>Delete</button>\r\n                {/* Простая форма для обновления */}\r\n                <form onSubmit={(e) => handleUpdate(e, 'word', word.id, {\r\n                  word: word.word\r\n                })}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Word\"\r\n                    value={word.word}\r\n                    onChange={(e) => handleUpdate(e, 'word', word.id, { ...word, word: e.target.value })}\r\n                  />\r\n                  <button type=\"submit\">Update</button>\r\n                </form>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC;IAAEe,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,aAAa,EAAE,EAAE;IAAEC,aAAa,EAAE,IAAI;IAAEC,oBAAoB,EAAE,KAAK;IAAEC,eAAe,EAAE;EAAE,CAAC,CAAC;EAC5J,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC;IAAEe,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC1D,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC;IAAEyB,IAAI,EAAE;EAAG,CAAC,CAAC;EAEpD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,OAAO,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA2B,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIxB,QAAQ,CAACwB,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;;IAEhE;IACAN,KAAK,CAAC,UAAU,CAAC,CACdC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAItB,SAAS,CAACsB,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;;IAEjE;IACAN,KAAK,CAAC,SAAS,CAAC,CACbC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIpB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,IAAI,KAAK;IAC1CD,KAAK,CAACE,cAAc,CAAC,CAAC;IACtB,IAAIC,OAAO;IACX,IAAIF,IAAI,KAAK,MAAM,EAAE;MACnB,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMF,KAAK,CAAC,SAAS,EAAE;UACtCa,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChC,OAAO;QAC9B,CAAC,CAAC;QACF,IAAI,CAACiB,QAAQ,CAACgB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMf,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClCS,OAAO,GAAG,CAAC,GAAGjC,KAAK,EAAEyB,IAAI,CAAC;QAC1BxB,QAAQ,CAACgC,OAAO,CAAC;MACnB,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;MACApB,UAAU,CAAC;QAAEC,QAAQ,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,aAAa,EAAE,EAAE;QAAEC,aAAa,EAAE,IAAI;QAAEC,oBAAoB,EAAE,KAAK;QAAEC,eAAe,EAAE;MAAE,CAAC,CAAC;IAClI,CAAC,MAAM,IAAIkB,IAAI,KAAK,OAAO,EAAE;MAC3B,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMF,KAAK,CAAC,UAAU,EAAE;UACvCa,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACxB,QAAQ;QAC/B,CAAC,CAAC;QACF,IAAI,CAACS,QAAQ,CAACgB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMf,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClCS,OAAO,GAAG,CAAC,GAAG/B,MAAM,EAAEuB,IAAI,CAAC;QAC3BtB,SAAS,CAAC8B,OAAO,CAAC;MACpB,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;MACAZ,WAAW,CAAC;QAAEP,QAAQ,EAAE;MAAG,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAIuB,IAAI,KAAK,MAAM,EAAE;MAC1B,IAAI;QACF,MAAMR,QAAQ,GAAG,MAAMF,KAAK,CAAC,SAAS,EAAE;UACtCa,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACtB,OAAO;QAC9B,CAAC,CAAC;QACF,IAAI,CAACO,QAAQ,CAACgB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMf,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClCS,OAAO,GAAG,CAAC,GAAG7B,KAAK,EAAEqB,IAAI,CAAC;QAC1BpB,QAAQ,CAAC4B,OAAO,CAAC;MACnB,CAAC,CAAC,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC5C;MACAV,UAAU,CAAC;QAAEC,IAAI,EAAE;MAAG,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMuB,YAAY,GAAG,MAAAA,CAAOX,KAAK,EAAEC,IAAI,EAAEW,EAAE,EAAEC,WAAW,KAAK;IAC3Db,KAAK,CAACE,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,IAAIT,QAAQ;MACZ,IAAIQ,IAAI,KAAK,MAAM,EAAE;QACnBR,QAAQ,GAAG,MAAMF,KAAK,CAAC,UAAUqB,EAAE,GAAG,EAAE;UACtCR,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,WAAW;QAClC,CAAC,CAAC;QACF,MAAMlB,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClCvB,QAAQ,CAACD,KAAK,CAAC4C,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,GAAGjB,IAAI,GAAGoB,IAAK,CAAC,CAAC;MAC7D,CAAC,MAAM,IAAId,IAAI,KAAK,OAAO,EAAE;QAC3BR,QAAQ,GAAG,MAAMF,KAAK,CAAC,WAAWqB,EAAE,GAAG,EAAE;UACvCR,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,WAAW;QAClC,CAAC,CAAC;QACF,MAAMlB,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClCrB,SAAS,CAACD,MAAM,CAAC0C,GAAG,CAACE,KAAK,IAAKA,KAAK,CAACJ,EAAE,KAAKA,EAAE,GAAGjB,IAAI,GAAGqB,KAAM,CAAC,CAAC;MAClE,CAAC,MAAM,IAAIf,IAAI,KAAK,MAAM,EAAE;QAC1BR,QAAQ,GAAG,MAAMF,KAAK,CAAC,UAAUqB,EAAE,GAAG,EAAE;UACtCR,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACK,WAAW;QAClC,CAAC,CAAC;QACF,MAAMlB,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;QAClCnB,QAAQ,CAACD,KAAK,CAACwC,GAAG,CAAC1B,IAAI,IAAKA,IAAI,CAACwB,EAAE,KAAKA,EAAE,GAAGjB,IAAI,GAAGP,IAAK,CAAC,CAAC;MAC7D;MACA,IAAI,CAACK,QAAQ,CAACgB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClE,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkBI,IAAI,GAAG,EAAEJ,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAMoB,YAAY,GAAG,MAAAA,CAAOjB,KAAK,EAAEC,IAAI,EAAEW,EAAE,KAAK;IAC9CZ,KAAK,CAACE,cAAc,CAAC,CAAC;IACtB,IAAI;MACF,IAAIT,QAAQ;MACZ,IAAIQ,IAAI,KAAK,MAAM,EAAE;QACnBR,QAAQ,GAAG,MAAMF,KAAK,CAAC,UAAUqB,EAAE,GAAG,EAAE;UACtCR,MAAM,EAAE;QACV,CAAC,CAAC;QACFjC,QAAQ,CAACD,KAAK,CAACgD,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;MAChD,CAAC,MAAM,IAAIX,IAAI,KAAK,OAAO,EAAE;QAC3BR,QAAQ,GAAG,MAAMF,KAAK,CAAC,WAAWqB,EAAE,GAAG,EAAE;UACvCR,MAAM,EAAE;QACV,CAAC,CAAC;QACF/B,SAAS,CAACD,MAAM,CAAC8C,MAAM,CAACF,KAAK,IAAIA,KAAK,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;MACpD,CAAC,MAAM,IAAIX,IAAI,KAAK,MAAM,EAAE;QAC1BR,QAAQ,GAAG,MAAMF,KAAK,CAAC,UAAUqB,EAAE,GAAG,EAAE;UACtCR,MAAM,EAAE;QACV,CAAC,CAAC;QACF7B,QAAQ,CAACD,KAAK,CAAC4C,MAAM,CAAC9B,IAAI,IAAIA,IAAI,CAACwB,EAAE,KAAKA,EAAE,CAAC,CAAC;MAChD;MACA,IAAI,CAACnB,QAAQ,CAACgB,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClE,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkBI,IAAI,GAAG,EAAEJ,KAAK,CAAC;IACjD;EACF,CAAC;EAED,oBACE9B,OAAA;IAAKoD,SAAS,EAAEtD,MAAM,CAACuD,SAAU;IAAAC,QAAA,gBAC/BtD,OAAA;MAAAsD,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB1D,OAAA;MAAKoD,SAAS,EAAEtD,MAAM,CAAC6D,IAAK;MAAAL,QAAA,gBAC1BtD,OAAA;QAAQoD,SAAS,EAAE,GAAGtD,MAAM,CAAC8D,GAAG,IAAItC,SAAS,KAAK,OAAO,GAAGxB,MAAM,CAAC+D,MAAM,GAAG,EAAE,EAAG;QAACC,OAAO,EAAEA,CAAA,KAAMvC,YAAY,CAAC,OAAO,CAAE;QAAA+B,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtI1D,OAAA;QAAQoD,SAAS,EAAE,GAAGtD,MAAM,CAAC8D,GAAG,IAAItC,SAAS,KAAK,QAAQ,GAAGxB,MAAM,CAAC+D,MAAM,GAAG,EAAE,EAAG;QAACC,OAAO,EAAEA,CAAA,KAAMvC,YAAY,CAAC,QAAQ,CAAE;QAAA+B,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzI1D,OAAA;QAAQoD,SAAS,EAAE,GAAGtD,MAAM,CAAC8D,GAAG,IAAItC,SAAS,KAAK,OAAO,GAAGxB,MAAM,CAAC+D,MAAM,GAAG,EAAE,EAAG;QAACC,OAAO,EAAEA,CAAA,KAAMvC,YAAY,CAAC,OAAO,CAAE;QAAA+B,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnI,CAAC,EAELpC,SAAS,KAAK,OAAO,iBACpBtB,OAAA;MAAAsD,QAAA,gBACEtD,OAAA;QAAAsD,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd1D,OAAA;QAAM+D,QAAQ,EAAGC,CAAC,IAAKhC,YAAY,CAACgC,CAAC,EAAE,MAAM,CAAE;QAAAV,QAAA,gBAC7CtD,OAAA;UACEkC,IAAI,EAAC,MAAM;UACX+B,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAEzD,OAAO,CAACE,QAAS;UACxBwD,QAAQ,EAAGH,CAAC,IAAKtD,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEE,QAAQ,EAAEqD,CAAC,CAACI,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvE,CAAC,eACF1D,OAAA;UACEkC,IAAI,EAAC,OAAO;UACZ+B,WAAW,EAAC,OAAO;UACnBC,KAAK,EAAEzD,OAAO,CAACG,KAAM;UACrBuD,QAAQ,EAAGH,CAAC,IAAKtD,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEG,KAAK,EAAEoD,CAAC,CAACI,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC,eACF1D,OAAA;UACEkC,IAAI,EAAC,UAAU;UACf+B,WAAW,EAAC,eAAe;UAC3BC,KAAK,EAAEzD,OAAO,CAACI,aAAc;UAC7BsD,QAAQ,EAAGH,CAAC,IAAKtD,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEI,aAAa,EAAEmD,CAAC,CAACI,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC,eACF1D,OAAA;UACEkE,KAAK,EAAEzD,OAAO,CAACK,aAAc;UAC7BqD,QAAQ,EAAGH,CAAC,IAAKtD,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEK,aAAa,EAAEkD,CAAC,CAACI,MAAM,CAACF;UAAM,CAAC,CAAE;UAAAZ,QAAA,gBAE3EtD,OAAA;YAAQkE,KAAK,EAAC,IAAI;YAAAZ,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9B1D,OAAA;YAAQkE,KAAK,EAAC,IAAI;YAAAZ,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9B1D,OAAA;YAAQkE,KAAK,EAAC,IAAI;YAAAZ,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9B1D,OAAA;YAAQkE,KAAK,EAAC,IAAI;YAAAZ,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9B1D,OAAA;YAAQkE,KAAK,EAAC,IAAI;YAAAZ,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC9B1D,OAAA;YAAQkE,KAAK,EAAC,IAAI;YAAAZ,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACT1D,OAAA;UACEkC,IAAI,EAAC,QAAQ;UACb+B,WAAW,EAAC,iBAAiB;UAC7BC,KAAK,EAAEzD,OAAO,CAACO,eAAgB;UAC/BmD,QAAQ,EAAGH,CAAC,IAAKtD,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEO,eAAe,EAAEqD,QAAQ,CAACL,CAAC,CAACI,MAAM,CAACF,KAAK;UAAE,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxF,CAAC,eACF1D,OAAA;UAAQkC,IAAI,EAAC,QAAQ;UAAAoB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACP1D,OAAA;QAAIoD,SAAS,EAAEtD,MAAM,CAACwE,IAAK;QAAAhB,QAAA,EACxBnD,KAAK,CAAC4C,GAAG,CAACC,IAAI,iBACbhD,OAAA;UAAkBoD,SAAS,EAAEtD,MAAM,CAACyE,IAAK;UAAAjB,QAAA,GACtCN,IAAI,CAACrC,QAAQ,eACdX,OAAA;YAAQ8D,OAAO,EAAGE,CAAC,IAAKd,YAAY,CAACc,CAAC,EAAE,MAAM,EAAEhB,IAAI,CAACH,EAAE,CAAE;YAAAS,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAEzE1D,OAAA;YAAM+D,QAAQ,EAAGC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,EAAE,MAAM,EAAEhB,IAAI,CAACH,EAAE,EAAE;cACtDlC,QAAQ,EAAEqC,IAAI,CAACrC,QAAQ;cACvBC,KAAK,EAAEoC,IAAI,CAACpC,KAAK;cACjBC,aAAa,EAAEmC,IAAI,CAACnC,aAAa;cACjCC,aAAa,EAAEkC,IAAI,CAAClC,aAAa;cACjCC,oBAAoB,EAAEiC,IAAI,CAACjC,oBAAoB;cAC/CC,eAAe,EAAEgC,IAAI,CAAChC;YACxB,CAAC,CAAE;YAAAsC,QAAA,gBACDtD,OAAA;cACEkC,IAAI,EAAC,MAAM;cACX+B,WAAW,EAAC,UAAU;cACtBC,KAAK,EAAElB,IAAI,CAACrC,QAAS;cACrBwD,QAAQ,EAAGH,CAAC,IAAKpB,YAAY,CAACoB,CAAC,EAAE,MAAM,EAAEhB,IAAI,CAACH,EAAE,EAAE;gBAAE,GAAGG,IAAI;gBAAErC,QAAQ,EAAEqD,CAAC,CAACI,MAAM,CAACF;cAAM,CAAC;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1F,CAAC,eACF1D,OAAA;cAAQkC,IAAI,EAAC,QAAQ;cAAAoB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA,GAnBAV,IAAI,CAACH,EAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,EAEApC,SAAS,KAAK,QAAQ,iBACrBtB,OAAA;MAAAsD,QAAA,gBACEtD,OAAA;QAAAsD,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf1D,OAAA;QAAM+D,QAAQ,EAAGC,CAAC,IAAKhC,YAAY,CAACgC,CAAC,EAAE,OAAO,CAAE;QAAAV,QAAA,gBAC9CtD,OAAA;UACEkC,IAAI,EAAC,MAAM;UACX+B,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAEjD,QAAQ,CAACN,QAAS;UACzBwD,QAAQ,EAAGH,CAAC,IAAK9C,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEN,QAAQ,EAAEqD,CAAC,CAACI,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,eACF1D,OAAA;UAAQkC,IAAI,EAAC,QAAQ;UAAAoB,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACP1D,OAAA;QAAIoD,SAAS,EAAEtD,MAAM,CAACwE,IAAK;QAAAhB,QAAA,EACxBjD,MAAM,CAAC0C,GAAG,CAACE,KAAK,iBACfjD,OAAA;UAAmBoD,SAAS,EAAEtD,MAAM,CAACyE,IAAK;UAAAjB,QAAA,GACvCL,KAAK,CAACtC,QAAQ,eACfX,OAAA;YAAQ8D,OAAO,EAAGE,CAAC,IAAKd,YAAY,CAACc,CAAC,EAAE,OAAO,EAAEf,KAAK,CAACJ,EAAE,CAAE;YAAAS,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAE3E1D,OAAA;YAAM+D,QAAQ,EAAGC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,EAAE,OAAO,EAAEf,KAAK,CAACJ,EAAE,EAAE;cACxDlC,QAAQ,EAAEsC,KAAK,CAACtC;YAClB,CAAC,CAAE;YAAA2C,QAAA,gBACDtD,OAAA;cACEkC,IAAI,EAAC,MAAM;cACX+B,WAAW,EAAC,UAAU;cACtBC,KAAK,EAAEjB,KAAK,CAACtC,QAAS;cACtBwD,QAAQ,EAAGH,CAAC,IAAKpB,YAAY,CAACoB,CAAC,EAAE,OAAO,EAAEf,KAAK,CAACJ,EAAE,EAAE;gBAAE,GAAGI,KAAK;gBAAEtC,QAAQ,EAAEqD,CAAC,CAACI,MAAM,CAACF;cAAM,CAAC;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7F,CAAC,eACF1D,OAAA;cAAQkC,IAAI,EAAC,QAAQ;cAAAoB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA,GAdAT,KAAK,CAACJ,EAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeb,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,EAEApC,SAAS,KAAK,OAAO,iBACpBtB,OAAA;MAAAsD,QAAA,gBACEtD,OAAA;QAAAsD,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd1D,OAAA;QAAM+D,QAAQ,EAAGC,CAAC,IAAKhC,YAAY,CAACgC,CAAC,EAAE,MAAM,CAAE;QAAAV,QAAA,gBAC7CtD,OAAA;UACEkC,IAAI,EAAC,MAAM;UACX+B,WAAW,EAAC,MAAM;UAClBC,KAAK,EAAE/C,OAAO,CAACE,IAAK;UACpB8C,QAAQ,EAAGH,CAAC,IAAK5C,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEE,IAAI,EAAE2C,CAAC,CAACI,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACF1D,OAAA;UAAQkC,IAAI,EAAC,QAAQ;UAAAoB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACP1D,OAAA;QAAIoD,SAAS,EAAEtD,MAAM,CAACwE,IAAK;QAAAhB,QAAA,EACxB/C,KAAK,CAACwC,GAAG,CAAC1B,IAAI,iBACbrB,OAAA;UAAkBoD,SAAS,EAAEtD,MAAM,CAACyE,IAAK;UAAAjB,QAAA,GACtCjC,IAAI,CAACA,IAAI,eACVrB,OAAA;YAAQ8D,OAAO,EAAGE,CAAC,IAAKd,YAAY,CAACc,CAAC,EAAE,MAAM,EAAE3C,IAAI,CAACwB,EAAE,CAAE;YAAAS,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAEzE1D,OAAA;YAAM+D,QAAQ,EAAGC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,EAAE,MAAM,EAAE3C,IAAI,CAACwB,EAAE,EAAE;cACtDxB,IAAI,EAAEA,IAAI,CAACA;YACb,CAAC,CAAE;YAAAiC,QAAA,gBACDtD,OAAA;cACEkC,IAAI,EAAC,MAAM;cACX+B,WAAW,EAAC,MAAM;cAClBC,KAAK,EAAE7C,IAAI,CAACA,IAAK;cACjB8C,QAAQ,EAAGH,CAAC,IAAKpB,YAAY,CAACoB,CAAC,EAAE,MAAM,EAAE3C,IAAI,CAACwB,EAAE,EAAE;gBAAE,GAAGxB,IAAI;gBAAEA,IAAI,EAAE2C,CAAC,CAACI,MAAM,CAACF;cAAM,CAAC;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtF,CAAC,eACF1D,OAAA;cAAQkC,IAAI,EAAC,QAAQ;cAAAoB,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA,GAdArC,IAAI,CAACwB,EAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAeZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxD,EAAA,CAhTQD,UAAU;AAAAuE,EAAA,GAAVvE,UAAU;AAgTlB;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}